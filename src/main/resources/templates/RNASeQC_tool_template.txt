echo `date` Begin Step: RNA QC metrics...
[(${toolFields.rnaSeqcJava})] -Xmx16g -jar [(${toolFields.rnaSeqc})] -r [(${databaseFields.genome})] -t [(${databaseFields.annotgene})] -n 1000 -s '[(${additionalQcFields.sampleName})]|[(${mkdupBam})]|RNASEQC analysis' -o [(${additionalQcFields.sqcOutdir})] [# th:if = "${additionalQcFields.readType.equals('single')}"]-singleEnd [# th:if = "${databaseFields.rRnaBed != null}"] -rRNA [(${databaseFields.rRnaBed})][/]VALIDATION_STRINGENCY=SILENT TMP_DIR=[(${additionalQcFields.stmpOutdir})][/][# th:unless = "${additionalQcFields.readType.equals('single')}"][# th:if = "${databaseFields.rRnaBed != null}"]-rRNA [(${databaseFields.rRnaBed})] [/]VALIDATION_STRINGENCY=SILENT TMP_DIR=[(${additionalQcFields.stmpOutdir})][/]
[(${toolFields.java})] -Xmx16g -jar [(${toolFields.picard})] CollectGcBiasMetrics REFERENCE_SEQUENCE=[(${databaseFields.genome})] INPUT=[(${mkdupBam})] OUTPUT=[(${metricFields.gcbiasMetrics})] SUMMARY_OUTPUT=[(${metricFields.gcsumMetrics})] CHART=[(${metricFields.gcbiasChart})] VALIDATION_STRINGENCY=SILENT TMP_DIR=[(${additionalQcFields.stmpOutdir})]
if [ $? -eq 0 ]
then
	echo `date` Successful Step: RNA QC metrics.
	sleep 8
else
	echo `date` Error Step: RNA QC metrics.

	echo `date` The job was aborted due to ERRORS found.
	exit 1;
fi

echo `date` Begin Step: Merge RNA QC...
[(${toolFields.python})] [(${additionalQcFields.jarPath})]/src/python/rna_qc_metrics.py --sample [(${additionalQcFields.sampleName})] --rnaseq [(${metricFields.rnaMetrics})] --duplicate [(${metricFields.mkdupMetrics})] --gcbias [(${metricFields.gcsumMetrics})] --project [(${additionalQcFields.project})] --run [(${additionalQcFields.run})] --date [(${additionalQcFields.date})] --output [(${metricFields.mergedQcMetrics})]
if [ $? -eq 0 ]
then
	echo `date` Successful Step: Merge RNA QC.
	sleep 8
else
	echo `date` Error Step: Merge RNA QC.

	echo `date` The job was aborted due to ERRORS found.
	exit 1;
fi

